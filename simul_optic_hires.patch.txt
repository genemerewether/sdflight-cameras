diff --git a/qcamera2.cpp b/qcamera2.cpp
index b7b4912..f8fb516 100755
--- a/qcamera2.cpp
+++ b/qcamera2.cpp
@@ -60,8 +60,8 @@ enum stream_type{
     STREAM_NUM
 };
 static pthread_mutex_t streamMutex[STREAM_NUM];
-bool QCamera2::isVideoRunning_ = false;
-bool QCamera2::isPreviewRunning_ = false;
+//bool QCamera2::isVideoRunning_ = false;
+//bool QCamera2::isPreviewRunning_ = false;
 
 static vector<int> g_openCameras;
 
@@ -84,7 +84,7 @@ static camera_module_t* getCameraHalModule()
                 dlclose(handle);
             }
         } else {
-            CAM_ERR("dlopen failed for %s, %s", CAMERA_HAL_LIB_NAME, dlerror());
+	    CAM_ERR("dlopen failed for %s, %s", CAMERA_HAL_LIB_NAME, dlerror());
         }
     }
     pthread_mutex_unlock(&halMutex);
@@ -284,7 +284,9 @@ void QCamera2Frame::dispatchFrame(ICameraListener* listener,
 QCamera2::QCamera2() :
     dev_(NULL),
     id_(-1),
-    isPreviewRequested_(false)
+    isPreviewRequested_(false),
+    isPreviewRunning_(false),
+    isVideoRunning_(false)
 {
     int i;
     for (i = 0; i < STREAM_NUM; i++)
@@ -385,9 +387,9 @@ void QCamera2::data_callback(int32_t msg_type,
         return;
     }
     if (((CAMERA_MSG_PREVIEW_FRAME == msg_type) ||
-        (CAMERA_MSG_PREVIEW_METADATA == msg_type)) && (!isPreviewRunning_))
+        (CAMERA_MSG_PREVIEW_METADATA == msg_type)) && (!me->isPreviewRunning_))
         goto exit;
-    if ((CAMERA_MSG_VIDEO_FRAME == msg_type) && (!isVideoRunning_))
+    if ((CAMERA_MSG_VIDEO_FRAME == msg_type) && (!me->isVideoRunning_))
         goto exit;
     /* notify each listener */
     for (int i=0; i < me->listeners_.size(); i++) {
@@ -410,9 +412,9 @@ void QCamera2::data_timestamp_callback(int64_t timestamp, int32_t msg_type,
     }
 
     if (((CAMERA_MSG_PREVIEW_FRAME == msg_type) ||
-        (CAMERA_MSG_PREVIEW_METADATA == msg_type)) && (!isPreviewRunning_))
+        (CAMERA_MSG_PREVIEW_METADATA == msg_type)) && (!me->isPreviewRunning_))
         goto exit;
-    if ((CAMERA_MSG_VIDEO_FRAME == msg_type) && (!isVideoRunning_))
+    if ((CAMERA_MSG_VIDEO_FRAME == msg_type) && (!me->isVideoRunning_))
         goto exit;
     /* notify each listener */
     for (int i=0; i < me->listeners_.size(); i++) {
@@ -487,6 +489,8 @@ int QCamera2::takePicture()
 {
     int rc = 0;
     dev_->ops->enable_msg_type(dev_, CAMERA_MSG_COMPRESSED_IMAGE);
+    dev_->ops->enable_msg_type(dev_, CAMERA_MSG_RAW_IMAGE);
+    dev_->ops->enable_msg_type(dev_, CAMERA_MSG_RAW_IMAGE_NOTIFY);
     rc = dev_->ops->take_picture(dev_);
     return rc;
 }
diff --git a/qcamera2.h b/qcamera2.h
index 2c17353..2d0b1db 100755
--- a/qcamera2.h
+++ b/qcamera2.h
@@ -76,8 +76,8 @@ class QCamera2 : public ICameraDevice
     std::vector<ICameraListener *> listeners_;
 
     bool isPreviewRequested_;
-    static bool isPreviewRunning_;
-    static bool isVideoRunning_;
+    bool isPreviewRunning_;
+    bool isVideoRunning_;
 
     static int msg_to_stream(int32_t msg_type);
 
